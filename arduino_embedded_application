#define echo_pin1 2                                 // echo pin for ultrasonic sensor 1
#define trig_pin1 3                                 // trigger pin for ultrasonic sensor 1
#define echo_pin2 4                                 // echo pin for ultrasonic sensor 2
#define trig_pin2 5                                 // trigger pin for ultrasonic sensor 2
#define LED1 12                                     // LED pin for sensor 1
#define LED2 13
#include <SoftwareSerial.h>
SoftwareSerial mySerial(10,11);                     // RX = 10, TX = 11

int duration, distance = 0;                         // holds the data from the ultrasonic sensor  for distance and duration
float data_array1[10];                              // holds the data in the arduino memory before sending to PC
float data_array2[10];                              // holds the data in the arduino memory before sending to PC
int i, k = 0;                                       // counter for dataArray
float sensor1_distance, sensor2_distance = 0;       // holds the actual distance detected by sensor1 and sensor2

char input;

void setup() 
{
  // put your setup code here, to run once:
  mySerial.begin(9600);                            // set baud rate to 9600
  pinMode(LED1, OUTPUT);                           // set the LED pin to output sensor 1
  pinMode(LED2, OUTPUT);                           // set the LED pin to output sensor 2

  pinMode(trig_pin1, OUTPUT);                      
  pinMode(echo_pin1, INPUT);
  pinMode(trig_pin2, OUTPUT);
  pinMode(echo_pin2, INPUT);
  
  mySerial.println(">>START<<");                   // set output
}

void loop() 
{             
  //************************************************ SENSOR 1 *********************************************************//                                      
  ultraSonicSensor(trig_pin1, echo_pin1);           // gets the distance from the first ultrasonic sensor on the prototype
  sensor1_distance = distance;
  mySerial.println(sensor1_distance);

  if (sensor1_distance >= 0)                        // lights up the LED pin for sensor if no object detected
    digitalWrite(LED1, HIGH); 
  else                                              
    digitalWrite(LED1, LOW);                        // turns off LED if object detected

  data_array1[i] = sensor1_distance;                // stores data into a temporary array
  ++i;
  if(i == 10)                                       // if the array is full, output it
  {
    mySerial.println("array on initial scan: ");
    mySerial.flush();
    for(int x = 0; x < 10; ++x)
    {
      mySerial.println(data_array1[x]);
      mySerial.flush();
    }
  }
  i = 0;                                            // reset counter
  //************************************************ SENSOR 1 *********************************************************//  

  //************************************************ SENSOR 2 *********************************************************//  
  ultraSonicSensor(trig_pin2, echo_pin2);           // gets the distance using the duration from ultrasonice sensor 2
  sensor2_distance = distance;
  mySerial.println(sensor2_distance);

    if (sensor2_distance >= 0)                      // lights up the LED pin for sensor if no object detected
    digitalWrite(LED2, HIGH); 
  else                                              
    digitalWrite(LED2, LOW);                        // turns off LED if object detected

  data_array2[k] = sensor2_distance;                // stores data into a temporary array
  ++k;
  if(k == 10)                                       // if the array is full, output it
  {
    mySerial.println("array on initial scan: ");
    mySerial.flush();
    for(int x = 0; x < 10; ++x)
    {
      mySerial.println(data_array2[x]);
      mySerial.flush();
    }
  }
  k = 0;                                            // reset counter
  //************************************************ SENSOR 2 *********************************************************//  
}

/**********************************************
This function writes HIGH or LOW to trigPin
or to echoPin. With delay of 1s and 1ms
**********************************************/
void ultraSonicSensor(int trigPin, int echoPin)
{
  digitalWrite(trigPin, HIGH);
  delay(1000);
  delayMicroseconds(1000);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  distance = (duration/2) / 29.1;
}
